scalar BigDecimal
scalar LocalDateTime

type STOCK_ENTRY_GQL {
    id: ID!
    rawMaterialId: ID!
    quantity: BigDecimal!
    cost: BigDecimal!
    recipe: [RECIPE_ITEM_GQL]
    timestamp: String!

}

input STOCK_ENTRY_GQLInput {
    rawMaterialId: ID!
    quantity: Float!
    cost: Float!
    recipe: [RECIPE_ITEM_GQLInput]
}

type CREATE_STOCK_ENTRY_RESPONSE {
    "Similar to HTTP status code, represents the status of the mutation"
    code: Int!
    "Indicates whether the mutation was successful"
    success: Boolean!
    "Human-readable message for the UI"
    message: String!
    "The newly created listing"
    stock: STOCK_ENTRY_GQL
}

extend type Query {
    getStockEntries: [STOCK_ENTRY_GQL]!
    findStockEntryById(id: ID!): STOCK_ENTRY_GQL
    getStockEntryCount: Int!
}

extend type Mutation {
    createStockEntry(stock: STOCK_ENTRY_GQLInput!): CREATE_STOCK_ENTRY_RESPONSE!
    updateStockEntry(id: ID!, stock: STOCK_ENTRY_GQLInput!): STOCK_ENTRY_GQL
    deleteStockEntry(id: ID!): Boolean
}